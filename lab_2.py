from gpiozero import Device, LED, PWMLED, Button
from gpiozero.pins.mock import MockFactory
from unittest.mock import Mock
import time
import sys
from cowsay import kitty as sÃ¤ger
from playsound import playsound as spela_ljud

if sys.platform == 'darwin':
    Device.pin_factory = MockFactory()
    temperatur_lÃ¤sare = Mock(return_value=(80, 21))
    temperatur_enhet = Mock()
    PWMLED = Mock()
else:
    import Adafruit_DHT.DHT11 as temperatur_enhet
    import Adafruit_DHT.read_retry as temperatur_lÃ¤sare

EN_SEKUND = 1

vÃ¤nster_Ã¶ga = LED(23)
hÃ¶ger_Ã¶ga = LED(24)
nos = PWMLED(18)
mun = Button(22)
hÃ¶rsel = Button(27)
temperatur_pinne = 25


class Hund():
    def __init__(self, namn):
        self.namn = namn
        self.hjÃ¤rtslag_rÃ¤knare = 0
        self.fÃ¶dsel_temperatur = self.kÃ¤nn_temperatur()
        hÃ¶rsel.when_activated = self.apport
        mun.when_activated = self.Ã¤t
        sÃ¤ger("Vov!!! jag heter", self.namn)
        self.skÃ¤ll()

    def slÃ¥_hjÃ¤rtslag(self, hjÃ¤rtslag_per_sekund=10):
        time.sleep(EN_SEKUND / hjÃ¤rtslag_per_sekund)
        self.hjÃ¤rtslag_rÃ¤knare = self.hjÃ¤rtslag_rÃ¤knare + 1

    def nollstÃ¤ll_hjÃ¤rtslag(self):
        self.hjÃ¤rtslag_rÃ¤knare = 0

    def kÃ¤nn_temperatur(self, pinne=temperatur_pinne):
        fuktighet, temperatur = temperatur_lÃ¤sare(temperatur_enhet, pinne)
        return temperatur

    def dax_att_kÃ¤nna_efter(self, efter_hur_mÃ¥nga_hjÃ¤rtslag=100):
        self.hjÃ¤rtslag_rÃ¤knare = self.hjÃ¤rtslag_rÃ¤knare + 1
        if self.hjÃ¤rtslag_rÃ¤knare > efter_hur_mÃ¥nga_hjÃ¤rtslag:
            self.nollstÃ¤ll_hjÃ¤rtslag()
            return True
        else:
            return False

    def blinka_Ã¶gonen(self, tid=0.5, antal=6):
        vÃ¤nster_Ã¶ga.blink(on_time=tid, off_time=tid, n=antal)
        hÃ¶ger_Ã¶ga.blink(on_time=tid, off_time=tid, n=antal)

    def pulsera_nosen(self, antal=4):
        nos.pulse(n=antal)

    def apport(self):
        print('ğŸ¦´')
        self.blinka_Ã¶gonen(0.2, 10)  # Snabbare Ã¤n vanligt
        self.skÃ¤ll()

    def Ã¤t(self):
        print('ğŸŒ­')
        self.blinka_Ã¶gonen()
        spela_ljud('ljud/eat.mp3')

    def skÃ¤ll(self):
        spela_ljud('ljud/vov.wav')

    def lev(self, vÃ¤rmeslag_temparatur_Ã¶kning=2):
        while True:
            self.slÃ¥_hjÃ¤rtslag()
            if self.dax_att_kÃ¤nna_efter() is True:
                temperatur_just_nu = self.kÃ¤nn_temperatur()
                print(self.namn, "kÃ¤nner att hans pÃ¤ls just nu Ã¤r Ã¤r", temperatur_just_nu, "grader")
                if temperatur_just_nu > temperatur_just_nu + vÃ¤rmeslag_temparatur_Ã¶kning:
                    print('ğŸ¥µ') and self.pulsera_nosen()


if __name__ == '__main__':
    hugo = Hund(namn='Hugo')
    hugo.lev()